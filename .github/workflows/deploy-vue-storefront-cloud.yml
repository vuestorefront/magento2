name: Deploy to Vue Storefront Cloud
on:
  push:
    branches:
      - main
      - develop
      - enterprise
      - release/*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Build and publish docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: demo-magento2-storefrontcloud-io/vue-storefront:${{ github.sha }}
          registry: registry.vuestorefront.cloud
          username: ${{ secrets.CLOUD_USERNAME }}
          password: ${{ secrets.CLOUD_PASSWORD }}
          dockerfile: .vuestorefrontcloud/docker/Dockerfile
          buildoptions: --compress
          buildargs: NPM_EMAIL,NPM_PASS,NPM_USER,NPM_REGISTRY,STORE_URL,MAGENTO_GRAPHQL,MAGENTO_EXTERNAL_CHECKOUT,MAGENTO_EXTERNAL_CHECKOUT_URL,MAGENTO_EXTERNAL_CHECKOUT_SYNC_PATH,IMAGE_PROVIDER,IMAGE_PROVIDER_BASE_URL,REDIS__HOST,REDIS__PORT,REDIS__CACHE_INVALIDATE_KEY,REDIS__CACHE_INVALIDATE_URL,REDIS__KEY_PREFIX,REDIS__ENABLED,SENTRY_DSN,RECAPTCHA_SITE_KEY,RECAPTCHA_SECRET_KEY
        env:
          NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
          NPM_PASS: ${{ secrets.CLOUD_PASSWORD }}
          NPM_USER: ${{ secrets.CLOUD_USERNAME }}
          NPM_REGISTRY: https://registrynpm.storefrontcloud.io
          STORE_URL: ${{ secrets.STORE_URL }}
          MAGENTO_GRAPHQL: ${{ secrets.MAGENTO_GRAPHQL }}
          MAGENTO_EXTERNAL_CHECKOUT: ${{ secrets.MAGENTO_EXTERNAL_CHECKOUT }}
          MAGENTO_EXTERNAL_CHECKOUT_URL: ${{ secrets.MAGENTO_EXTERNAL_CHECKOUT_URL }}
          MAGENTO_EXTERNAL_CHECKOUT_SYNC_PATH: ${{ secrets.MAGENTO_EXTERNAL_CHECKOUT_SYNC_PATH }}
          IMAGE_PROVIDER: ${{ secrets.IMAGE_PROVIDER }}
          IMAGE_PROVIDER_BASE_URL: ${{ secrets.IMAGE_PROVIDER_BASE_URL }}
          REDIS__HOST: ${{ secrets.REDIS__HOST }}
          REDIS__PORT: ${{ secrets.REDIS__PORT }}
          REDIS__KEY_PREFIX: ${{ secrets.REDIS__KEY_PREFIX }}
          REDIS__CACHE_INVALIDATE_KEY: ${{ secrets.REDIS__CACHE_INVALIDATE_KEY }}
          REDIS__CACHE_INVALIDATE_URL: ${{ secrets.REDIS__CACHE_INVALIDATE_URL }}
          REDIS__ENABLED: ${{ secrets.REDIS__ENABLED }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}

  deploy-main:
    uses: ./.github/workflows/deployment-template.yml
    needs: build
    if: github.ref == 'refs/heads/main'
    with:
      github_environment_name: production
      environment_code: demo-magento2
      target_url: https://demo-magento2.europe-west1.gcp.storefrontcloud.io
    secrets:
      cloud_username: ${{ secrets.CLOUD_USERNAME }}
      cloud_password: ${{ secrets.CLOUD_PASSWORD }}

  deploy-develop:
    uses: ./.github/workflows/deployment-template.yml
    needs: build
    if: github.ref == 'refs/heads/develop'
    with:
      github_environment_name: dev
      environment_code: demo-magento2-dev
      target_url: https://demo-magento2-dev.europe-west1.gcp.storefrontcloud.io
    secrets:
      cloud_username: ${{ secrets.CLOUD_USERNAME }}
      cloud_password: ${{ secrets.CLOUD_PASSWORD }}

  deploy-release:
    uses: ./.github/workflows/deployment-template.yml
    needs: build
    if: startsWith(github.ref, 'refs/heads/release')
    with:
      github_environment_name: canary
      environment_code: demo-magento2-canary
      target_url: https://demo-magento2-canary.europe-west1.gcp.storefrontcloud.io
    secrets:
      cloud_username: ${{ secrets.CLOUD_USERNAME }}
      cloud_password: ${{ secrets.CLOUD_PASSWORD }}

  deploy-enterprise:
    uses: ./.github/workflows/deployment-template.yml
    needs: build
    if: github.ref == 'refs/heads/enterprise'
    with:
      github_environment_name: enterprise
      environment_code: demo-magento2-enterprise
      target_url: https://demo-magento2-enterprise.europe-west1.gcp.storefrontcloud.io
    secrets:
      cloud_username: ${{ secrets.CLOUD_USERNAME }}
      cloud_password: ${{ secrets.CLOUD_PASSWORD }}

